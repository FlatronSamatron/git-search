{"version":3,"sources":["components/Loader.js","components/Message.js","components/UserList.js","actions/userActions.js","components/FirstScreen.js","components/Repos.js","components/SecondScreen.js","App.js","store.js","reducers/userReducers.js","index.js"],"names":["Loader","Spinner","animation","role","style","width","height","margin","display","className","Message","variant","children","Alert","UserList","userSerch","dispatch","useDispatch","history","useHistory","userListInfo","useSelector","state","userList","loading","error","users","useEffect","search","localStorage","setItem","JSON","stringify","a","axios","get","data","items","map","el","login","public_repos","type","payload","response","message","errors","list","listUser","avatar_url","onClick","push","clickHandler","src","alt","Table","striped","bordered","hover","FirstScreen","useState","setSearch","getItem","parse","Container","InputGroup","FormControl","placeholder","onChange","user","value","target","findUser","Repos","repoSearch","repos","setRepos","userRepoSelector","userRepo","repo","React","useMemo","result","filter","name","toString","toLowerCase","trim","indexOf","stargazers_count","forks_count","html_url","href","SecondScreen","userLogin","match","params","setRepoSearch","userInfoSelector","userInfo","email","location","created_at","followers","following","bio","joinDate","Date","toLocaleString","Row","Col","md","Image","fluid","ListGroup","Item","e","App","path","component","exact","reducer","combineReducers","action","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4957704.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner animation = 'border' role='status' style={{width: '100px', height: '100px', margin: 'auto', display: 'block'}}>\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport {Alert} from 'react-bootstrap'\r\n\r\nconst Message = ({variant = 'info' , children}) => {\r\n    return (\r\n        <Alert variant = {variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React, { useEffect } from 'react'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { userList } from '../actions/userActions'\r\nimport { Table } from 'react-bootstrap'\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\n\r\nconst UserList = ({userSerch}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n\r\n    const userListInfo = useSelector( state => state.userList)\r\n    const {loading, error, users} = userListInfo\r\n\r\n    useEffect( ()=> {\r\n        if(userSerch !== '') localStorage.setItem('search', JSON.stringify(userSerch))\r\n        dispatch(userList(userSerch))\r\n    }, [dispatch, userSerch])\r\n\r\n    let list = users.items ? users.items : []\r\n\r\n    const clickHandler = (login) => {\r\n        history.push(`/user/${login}`)\r\n    }\r\n\r\n    const listUser = list.map( ({login, avatar_url} ) => {\r\n        return  <tr key={login} onClick={()=>clickHandler(login)}>\r\n                    <td><img className=\"avatar\" src={avatar_url} alt={login}/></td>\r\n                    <td>{login}</td>\r\n                    <td>**</td>\r\n                </tr>  \r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            { loading ? <Loader/> : error ? <Message variant=\"danger\">{error}</Message> : \r\n            <Table striped bordered hover className='mt-3'>\r\n                <thead>\r\n                    <tr>\r\n                    <th>Image</th>\r\n                    <th>UserName</th>\r\n                    <th>Repo</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {listUser}\r\n                </tbody>\r\n            </Table>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserList\r\n","import axios from 'axios'\r\n\r\nconst token = '&access_token=e1f982f3dd0f30c50028d47f0565249c8e0684c2'\r\n\r\nexport const userList = (search) => async (dispatch) => {\r\n    try{\r\n        if(search){\r\n            const {data} = await axios.get(`https://api.github.com/search/users?q=${search}&access_token=${token}`)\r\n        \r\n\r\n\r\n        // const getUser = async (login) => {\r\n        //     const res = await axios.get(`https://api.github.com/users/${login}?access_token=d323eee49c8c93ab67f20bb5750df7594744968a`)\r\n        //     return res.data\r\n        // }\r\n\r\n\r\n        const countRepo = data.items.map( async (el) => {\r\n            const {data} = await axios.get(`https://api.github.com/users/${el.login}`)\r\n            el.public_repos = data.public_repos\r\n        })\r\n        \r\n        dispatch({ type : 'user_list_request' })\r\n\r\n        dispatch({\r\n            type: 'user_list_success',\r\n            payload: data\r\n        })\r\n        }\r\n    } catch (error) {\r\n        dispatch({\r\n            type: 'user_list_fail',\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.errors : 'error'\r\n        })\r\n    }\r\n}\r\n\r\nexport const userInfo = (login) => async (dispatch) => {\r\n    try{\r\n        const {data} = await axios.get(`https://api.github.com/users/${login}`)\r\n        \r\n        dispatch({ type : 'user_info_request' })\r\n\r\n        dispatch({\r\n            type: 'user_info_success',\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: 'user_info_fail',\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.errors : 'error'\r\n        })\r\n    }\r\n}\r\n\r\nexport const userRepo = (login) => async (dispatch) => {\r\n    try{\r\n        const {data} = await axios.get(`https://api.github.com/users/${login}/repos?per_page=100`)\r\n        \r\n        dispatch({ type : 'user_repo_request' })\r\n\r\n        dispatch({\r\n            type: 'user_repo_success',\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: 'user_repo_fail',\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.errors : 'error'\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { InputGroup,FormControl } from 'react-bootstrap'\r\nimport { useState, useEffect } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nimport UserList from './UserList'\r\n\r\n\r\n\r\n\r\nconst FirstScreen = () => {\r\n\r\n    const [search, setSearch] = useState('')\r\n\r\n    useEffect(()=>{\r\n        localStorage.getItem('search') ? setSearch(JSON.parse(localStorage.getItem('search'))) : setSearch('')\r\n    }, [setSearch])\r\n\r\n    const findUser = (user) => {\r\n        const value = user.target.value\r\n        setSearch(value)\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"search-panel\">\r\n                <h1>Github Searcher</h1>\r\n                <InputGroup className=\"mb-3\">\r\n                    <FormControl\r\n                    placeholder=\"Search for Users\"\r\n                    onChange={(user)=>findUser(user)}\r\n                    value={search}\r\n                    />\r\n                </InputGroup>\r\n            </div>\r\n            <div>\r\n                <UserList userSerch={search} />\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FirstScreen\r\n","import React,{ useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { Table } from 'react-bootstrap'\r\n\r\nimport { userRepo } from '../actions/userActions'\r\n\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\n\r\nconst Repos = ({login,repoSearch}) => {\r\n\r\n    const [repos, setRepos] = useState([])\r\n    \r\n    const userRepoSelector = useSelector( state => state.userRepo )\r\n    const dispatch = useDispatch()\r\n\r\n    const {loading, error} = userRepoSelector\r\n\r\n    useEffect(()=>{\r\n        dispatch(userRepo(login))\r\n        setRepos(userRepoSelector.repo)\r\n    },[dispatch,login,setRepos])\r\n\r\n\r\n    React.useMemo(() => {\r\n        let result = userRepoSelector.repo.filter(( el )=>{\r\n            return el.name.toString().toLowerCase().trim().indexOf(repoSearch.toString().toLowerCase().trim()) >= 0\r\n        })\r\n        setRepos(result)\r\n    }, [repoSearch,userRepoSelector.repo])\r\n\r\n\r\n    const repo = repos.map( ({name,stargazers_count,forks_count,html_url}) => {\r\n        return  <tr key={name}>\r\n                    <td><a href={html_url}>{name}</a></td>\r\n                    <td>{stargazers_count}/{forks_count}</td>\r\n                </tr>  \r\n    })\r\n\r\n    return (\r\n        <>{ loading ? <Loader/> : error ? <Message variant=\"danger\">{error}</Message> :\r\n            <Table striped bordered hover className='mt-3'>\r\n                <thead>\r\n                    <tr>\r\n                    <th>Repo Name</th>\r\n                    <th>Forks/stars</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {repo}\r\n                </tbody>\r\n            </Table>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Repos\r\n","import React,{ useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Container,Row,Col,InputGroup,FormControl,Image,ListGroup } from 'react-bootstrap'\r\n\r\nimport { userInfo } from '../actions/userActions'\r\nimport Repos from './Repos'\r\n\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\n\r\nconst SecondScreen = ({match}) => {\r\n    const userLogin = match.params.login\r\n\r\n    const [repoSearch, setRepoSearch] = useState('')\r\n\r\n    const userInfoSelector = useSelector( state => state.userInfo )\r\n    const dispatch = useDispatch()\r\n\r\n    const {loading, error, user} = userInfoSelector\r\n    \r\n\r\n    useEffect(()=>{\r\n        dispatch(userInfo(userLogin))\r\n    },[dispatch,userLogin])\r\n\r\n    const {avatar_url, login, email, location, created_at, followers, following, bio} = user\r\n    const joinDate = new Date(created_at).toLocaleString()\r\n    return (\r\n        <Container>{ loading ? <Loader/> : error ? <Message variant=\"danger\">{error}</Message> :\r\n                    <div className=\"search-panel\">\r\n                        <h1>Github Searcher</h1>\r\n                        <Row >\r\n                            <Col md={6} className=\"p-3\">\r\n                                <Image className=\"user-info-img\" fluid src={avatar_url}/>\r\n                            </Col>\r\n                            <Col md={6} className=\"p-3\">\r\n                                <ListGroup className=\"text-left\">\r\n                                    <ListGroup.Item><strong>Login:</strong> {login}</ListGroup.Item>\r\n                                    <ListGroup.Item><strong>Email:</strong> {email ? email : 'none'}</ListGroup.Item>\r\n                                    <ListGroup.Item><strong>Location:</strong> {location ? location : 'none'}</ListGroup.Item>\r\n                                    <ListGroup.Item><strong>Join date:</strong> {joinDate}</ListGroup.Item>\r\n                                    <ListGroup.Item><strong>Followers:</strong> {followers}</ListGroup.Item>\r\n                                    <ListGroup.Item><strong>Following:</strong> {following}</ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n                            <Col md={12}>\r\n                                <p>{bio}</p>\r\n                            </Col>\r\n                        </Row>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                            placeholder=\"Search for User's Repositories\"\r\n                            value={repoSearch}\r\n                            onChange={(e)=>setRepoSearch(e.target.value)}\r\n                            />\r\n                        </InputGroup>\r\n                        <Repos login={login} repoSearch={repoSearch}/>\r\n                    </div>}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SecondScreen\r\n","import {BrowserRouter as Router, Route} from 'react-router-dom'\n\nimport FirstScreen from './components/FirstScreen'\nimport SecondScreen from './components/SecondScreen'\n\nfunction App() {\n  return (\n    <Router>\n      <Route path=\"/\" component={FirstScreen} exact/>\n      <Route path=\"/user/:login\" component={SecondScreen}/>\n    </Router>\n  );\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport { userListReducer, userInfoReducer, userRepoReducer } from './reducers/userReducers'\r\n\r\nconst reducer = combineReducers({\r\n    userList: userListReducer,\r\n    userInfo: userInfoReducer,\r\n    userRepo: userRepoReducer\r\n})\r\n\r\n\r\nconst middleware = [thunk]\r\n\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\n\r\nexport default store","\r\n\r\nexport const userListReducer = (state = {users:[]}, action) => {\r\n    switch (action.type){\r\n        case 'user_list_request':\r\n            return {loading: true, users: []}\r\n        case 'user_list_success':\r\n            return {loading: false, users: action.payload}\r\n        case 'user_list_fail':\r\n            return {loading: false, error: action.payload, users: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userInfoReducer = (state = {user:[]}, action) => {\r\n    switch (action.type){\r\n        case 'user_info_request':\r\n            return {loading: true, user: []}\r\n        case 'user_info_success':\r\n            return {loading: false, user: action.payload}\r\n        case 'user_info_fail':\r\n            return {loading: false, error: action.payload, user: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRepoReducer = (state = {repo:[]}, action) => {\r\n    switch (action.type){\r\n        case 'user_repo_request':\r\n            return {loading: true, repo: []}\r\n        case 'user_repo_success':\r\n            return {loading: false, repo: action.payload}\r\n        case 'user_repo_fail':\r\n            return {loading: false, error: action.payload, repo: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n        <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}